services:
  api:
    container_name: api
    platform: linux/amd64
    pid: "host"
    build:
      context: .
    env_file: .env
    volumes:
      - /var/www/movies:/var/www/movies
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - pg-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:17
    container_name: db
    restart: always
    volumes:
      - /var/lib/postgresql:/var/lib/postgresql
      - ./migrations:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=midi
    ports:
      - "127.0.0.1:5432:5432"
    networks:
      - pg-network
    healthcheck:  # ヘルスチェック設定を追加
      test: ["CMD-SHELL", "pg_isready -U user -d midi"]
      interval: 5s
      timeout: 5s
      retries: 5

  # フロントエンド (Nginx)
  frontend:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../app/dist:/usr/share/nginx/html
      - ../nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
    networks:
      - pg-network

volumes:
  postgres_data:

networks:
  pg-network:
    driver: bridge